<?php

namespace app\controllers;

use Yii;
use yii\filters\AccessControl;
use yii\web\Controller;
use app\models\Guest;
use app\models\Diet;
use app\models\OrdersList;
use yii\db\Query;
use app\models\Payment;
use yii\helpers\Url;
use app\models\Orders;
use yii\helpers\Security;
use yii\web\IdentityInterface;
use \app\models\Bank;
use yii\web\NotFoundHttpException;


class BookingController extends Controller 
{
    /**
     * {@inheritdoc}
     */
    public function actionStep1()
    {
        $model = new OrdersList();
        $updateList = new OrdersList();
        $orders = new Orders();
        $request = Yii::$app->request;
        $insertid = null;
        if(isset(Yii::$app->request->post('OrdersList')['counter'])){
            $orders->id = Yii::$app->user->identity->id;
            $orders->counter = Yii::$app->request->post('OrdersList')['counter'];
            $orders->status = 0;

            if($orders->counter==10){
                $orders->price = 3000;
            } else {
                $orders->price = 320 * $orders->counter;
            }
            
           if($orders->save()){
                $insertid->orderID;
           }
        }

        $a=0;
        if ($model->load(Yii::$app->request->post())) {
	    if($data[f_name][0] ==NULL )$model->addError('f_name','ต้องมีชื่ออย่างน้อย 1 ฟิลด์');
        if($data[l_name][0] ==NULL )$model->addError('l_name','ต้องมีนามสกุลอย่างน้อย 1 ฟิลด์');
        	if($data[tel][0] ==NULL )$model->addError('tel','ต้องมีเบอร์โทรอย่างน้อย 1 ฟิลด์');
            for($i=0; $i<10; $i++){
                foreach ($model as $key => $value) {
                    $updateList->orderID = $insertid;

                    if($model->$key[$i] && $key!=null){
                        $data[$key][] =  $model->$key[$i];
                    }
                }                
            }      
     	}
        if($data){
            for($i=0; $i < $orders->counter; $i++){
                foreach ($data as $key => $value) {
                    $updateList->$key = $data[$key][$i];
		    echo $data[f_name][0];

                }
                $updateList->orderID = $orders->orderID;
                Yii::$app->db->createCommand()->batchInsert('orders_list', ['orderID', 'f_name','l_name','tel','diet_row','diet_col'], [
                    [
                        $updateList->orderID,
                        $updateList->f_name,
                        $updateList->l_name,
                        $updateList->tel,
                        $data['diet_row'][0],
                        $data['diet_col'][0],
                    ],
                ])->execute();
            }die();
            return $this->redirect(['success','id'=> $orders->orderID]);
            
        }
        if (Yii::$app->request->post()) {
            $row = Yii::$app->request->post('row');
            $col = Yii::$app->request->post('col');
            $max = Yii::$app->request->post('max');
        }
        if(Yii::$app->request->post('numOfPeople')){
            $numOfPeople = Yii::$app->request->post('numOfPeople');
        } else $numOfPeople = 1;
        return $this->render('step1',['model' =>$model,'row'=>$row,'col'=>$col,'max'=>$max,'numOfPeople'=>$numOfPeople]);
    } 

    public function actionIndex(){
        $Diet = new Diet();
        $getDietRow = Diet::find()
                ->select('diet_row')
                ->groupBy('diet_row')
                ->all();

        $getDietCol = Diet::find()
                ->all();

        $NumBooking = OrdersList::find()
            ->select('COUNT(id) AS cnt,diet_row,diet_col')
            ->groupBy(['diet_row','diet_col'])
            ->all();
        //var_dump($model->load(Yii::$app->request->get()));
                
        return $this->render('index',
        [
            'Diet'=>$Diet,
            'RowDiet'=>$getDietRow,
            'NumBooking'=>$NumBooking,
            'ColDiet'=>$getDietCol,
        ]);
    }

    /***
     * 
     * 
     * Action for payment.
     * 
     * * */
    public function actionPayment()
    {
        $model = new Payment();
        $Orders = new Orders();

       
        $orderShow = null;
        if(Yii::$app->request->get('id')){
            $orderID = Yii::$app->request->get('id');
            if(!($orderShow = Orders::find()->where(['orderID'=>$orderID,'id'=>Yii::$app->user->identity->id])->one() ))
                throw new NotFoundHttpException('The requested page does not exist.');
        }

        if ($model->load(Yii::$app->request->post())) {
            $model->attach = $model->upload($model,'attach');
            $chkOrders = $Orders->find()->where(['orderID' => $model->orderID])->andwhere(['id'=>Yii::$app->user->identity->id])->one();
            if(!empty($chkOrders->orderID)){
                $model->save();
                return $this->redirect(Url::toRoute('/orders'));
            } else {
                $model->addError('orderID', 'ไม่พบประวัติการจองของคุณ');
            }
        }

        return $this->render('payment', [
            'model' => $model,
            'orderShow' => $orderShow,
        ]);
    }

    public function actionSuccess($id)
    {
        $model = Bank::find()->one();
        $order = Orders::findOne($id);
        return $this->render('success', [
            'model' => $model,
            'order'=>$order,
        ]);
    }

    
}
